# Generated by Django 5.1.2 on 2024-11-17 04:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PoliceUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('inspector', 'Inspector'), ('sub_inspector', 'Sub Inspector'), ('officer', 'Police Officer')], max_length=20)),
                ('jurisdiction_area', models.CharField(max_length=100)),
                ('badge_number', models.CharField(max_length=20, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LawSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_number', models.CharField(max_length=20)),
                ('act_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('keywords', models.TextField(help_text='Comma-separated keywords that trigger this section')),
                ('punishment', models.TextField(blank=True, null=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('act_name', 'section_number'), name='unique_act_section')],
            },
        ),
        migrations.CreateModel(
            name='FIR',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False)),
                ('date_filed', models.DateTimeField(auto_now_add=True)),
                ('complainant_name', models.CharField(max_length=100)),
                ('complainant_address', models.TextField()),
                ('complainant_aadhar', models.CharField(max_length=12)),
                ('complainant_phone', models.CharField(max_length=10)),
                ('incident_place', models.CharField(blank=True, max_length=200, null=True)),
                ('statement', models.TextField()),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='fir_audio/')),
                ('status', models.CharField(choices=[('Open', 'Open'), ('In Progress', 'In Progress'), ('Closed', 'Closed')], default='Open', max_length=20)),
                ('suggested_sections', models.ManyToManyField(blank=True, related_name='related_firs', to='accounts.lawsection')),
            ],
        ),
    ]
